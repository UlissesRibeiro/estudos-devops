name: Build de image Docker

on:
  pull_request:
    branches:
     - master

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Docker
        run: |
          #apt-get update
          sudo apt-get install curl -y
          sudo curl -fsSl https://get.docker.com | sh

      - name: Build image Docker
        run: |
          cd desafio-02/nginx/
          docker build -t nginx-custom:1.0 .
          docker run -dit --name nginx -p 8070:80 nginx-custom:1.0

      - name: Teste de conexão
        run: |
          sleep 5
          curl -lv http://localhost:8070

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ulissestark/nginx-custom

      #- name: Build and push Docker image
      #  id: push
      #  uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      #  with:
      #    context: .
      #    file: desafio-02/nginx/Dockerfile
      #    push: true
      #    tags: ${{ steps.meta.outputs.tags }}
      #    labels: ${{ steps.meta.outputs.labels }}

      - name: Push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: nginx-custom:1.0
          push-only: true


      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  #Testes:
  #  runs-on: ubuntu-latest
  #  needs: Build
  #  steps:
  #    - name: Teste de conexão
  #      uses: actions/checkout@v3#

  #    - name: Teste de conexão
  #      run: curl -lv http://localhost:8070